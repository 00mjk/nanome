params {
	//##################################################################
	//################Reserved by LifeBit Cloud settings################
	//##################################################################
	//##################################################################
    //gpu related params
    containerOptions = '--gpus all'
    accelerator  = 'nvidia-tesla-p100'
    n_accelerators = 1
    with_gpus_process_cpus = 4
    with_gpus_process_memory = '24.GB'

    // configuration for profiles
    echo = true
    config = 'conf/standard.config'
    executor = false
    gls_bootDiskSize = '50.GB'
    gls_preemptible = true
    zone = 'us-east1-b'
    network = 'jax-cloudos-shengli-vpc'
    subnetwork =  'cloudos-subnet'
    queueSize = 200
    //##################################################################
	//##############################End of block########################
	//##################################################################
	//##################################################################

	//Default input params
	dsname = 'TestData'
    input = 'https://github.com/liuyangzzu/nano-compare/raw/master/test_data/demo.fast5.reads.tar.gz'
    outputDir="outputs"

//	online=true
    benchmarking=false // if running benchmarking
    debug=false // true if only debug purpose
	eval=false // if perform evaluations after callings
	runBasecall=true
	runMethcall=true

	runid = "TestData_RRBS"
    bgtruthWithEncode="bismark:/projects/li-lab/Nanopore_compare/data/NA19240/NA19240_RRBS_ENCFF000LZS_rep1.Read_R1.Rep_1_trimmed_bismark_bt2.CpG_report.txt.gz;/projects/li-lab/Nanopore_compare/data/NA19240/NA19240_RRBS_ENCFF000LZT_rep2.Read_R1.Rep_2_trimmed_bismark_bt2.CpG_report.txt.gz"
    bgtruth_cov=5
    tool_cov=3

    processors = 8

    // Reference genome from online inputs
	referenceGenome="reference_genome/hg38/hg38.fasta"
	chromSizesFile="reference_genome/hg38/hg38.chrom.sizes"

	//##################################################################
	//################Reserved by tools settings########################
	//##################################################################
	//##################################################################
    //Default tool settings and params
    runDeepMod=true

	// Used for DeepSignal gpu support
    DeepMod_isgpu = 'yes'

	// Resquiggle specifications
    correctedGroup="RawGenomeCorrected_000"
    DeepModMoveOptions="--move"
    DeepModSumChrSet="" //default is Human chr, or else need to specify such as chr1,chr2

	// Guppy model specificatoins
	//This model is the Guppy basecall used model
	GUPPY_BASECALL_MODEL="dna_r9.4.1_450bps_hac.cfg"
	GuppyGPUOptions="--gpu_runners_per_device 16 --device auto"

	//This model is suggested the best for Megalodon
	MEGALODON_MODEL_FOR_GUPPY_CONFIG="res_dna_r941_min_modbases_5mC_v001.cfg"
	GUPPY_TIMEOUT = 240
	READS_PER_GUPPY_BATCH = 100
	SAMTOOLS_PATH="samtools"

	// DeepMod model specifications
	DeepModGithub="https://github.com/WGLab/DeepMod/archive/refs/tags/v0.1.3.tar.gz"
    deepModModel="rnn_conmodC_P100wd21_f7ne1u0_4/mod_train_conmodC_P100wd21_f3ne1u0"
    clusterDeepModModel="na12878_cluster_train_mod-keep_prob0.7-nb25-chr1/Cg.cov5.nb25"

	//Input used by pipeline, located in zenodo
	zenodoNumber="4730517"
	params.deepmod_ctar = "https://zenodo.org/record/${zenodoNumber}/files/C.tar.gz"
	params.genome_annotation_tar = "https://zenodo.org/record/${zenodoNumber}/files/genome-annotation.tar.gz"
	params.reference_genome_tar = "https://zenodo.org/record/${zenodoNumber}/files/reference_genome.tar.gz"
	params.deepsignel_model_tar = "https://zenodo.org/record/${zenodoNumber}/files/model.CpG.R9.4_1D.human_hx1.bn17.sn360.v0.1.7%2B.tar.gz"
	params.megalodon_model_tar = "https://zenodo.org/record/${zenodoNumber}/files/megalodon_model.tar.gz"
//	params.deepmod_master_zip = "https://zenodo.org/record/4733289/files/DeepMod-master.zip"
	//##################################################################
	//##############################End of block########################
	//##################################################################
	//##################################################################
}

// Running on different platforms
profiles {

    docker {
        process.container="quay.io/lifebitai/nano-compare"
        docker.enabled = true
    }
	
    standard { includeConfig params.config }

    winter { // run on HPC winter GPU settings
        process.conda='/home/liuya/anaconda3/envs/nanocompare'
        process.executor='slurm'
        process.queue='gpu'
        process.clusterOptions='-q inference -n 8 --gres=gpu:1 --time=06:00:00 --mem=70G'
        process.cache = 'lenient'

		// Guppy gpu dir
		params.GuppyDir="/projects/li-lab/software/ont-guppy-gpu_4.2.2"
        params.GuppyGPUOptions="--gpu_runners_per_device 8 --device auto"
        params.GuppyNumCallers=16

        params.DeepMod_isgpu = 'yes'

        env.PATH = "${params.GuppyDir}/bin:$PATH"


    }

    sumner { // run on HPC sumner with CPU support
        process.conda='/home/liuya/anaconda3/envs/nanocompare'
        executor.name ='slurm'
        process.clusterOptions='-q batch -n 8 --time=2-06:00:00 --mem=70G'
        process.cache = 'lenient'

		params.processors = 8
		// Guppy cpu config
        params.GuppyDir="/projects/li-lab/software/ont-guppy-cpu_4.2.2"
        params.GuppyGPUOptions=""
        params.GuppyNumCallers=16

        //DeepMod cpu config
        params.DeepMod_isgpu = 'no'
        env.PATH = "${params.GuppyDir}/bin:$PATH"
    }

    test  {
        includeConfig 'conf/test.config'
    }

    sumner2 {
        process.executor = 'slurm'
        process.beforeScript = 'module load singularity'
        singularity {
            enabled = true
            autoMounts = true
        }
    }
}

executor {
    name = params.executor
    queueSize = params.queueSize
}

manifest {
    homePage = 'https://nanome.jax.org'
    description = 'The nanome Pipeline of evaluation DNA methylation calling tools for Oxford Nanopore sequencing'
    mainScript = 'main.nf'
    version = '1.0.0'
}


//
//trace {
//    enabled = true
//    file = 'nanome.pipeline_trace.txt'
//    //fields = 'task_id,name,status,exit,realtime,%cpu,rss'
//}
